// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.106.0/containers/alpine-3.10-git
{
    "name": "Alpine 3.10",
    "dockerFile": "Dockerfile",
    // Set *default* container specific settings.json values on container create. 
    "settings": {
        "terminal.integrated.shell.linux": "/bin/bash",
        "yaml.schemas": {
            "https://d33vqc0rt9ld30.cloudfront.net/latest/gzip/CloudFormationResourceSpecification.json": [
                "*.cf.yaml",
                "*.cf.yml",
                "cloud*formation/*.yaml",
                "cloud*formation/*.yml"
            ]
        },
        "yaml.customTags": [
            "!Ref",
            "!Sub scalar",
            "!Sub sequence",
            "!Join sequence",
            "!FindInMap sequence",
            "!GetAtt scalar",
            "!GetAtt sequence",
            "!Base64 mapping",
            "!GetAZs",
            "!Select scalar",
            "!Select sequence",
            "!Split sequence",
            "!ImportValue",
            "!Condition",
            "!Equals sequence",
            "!And",
            "!If",
            "!Not",
            "!Or"
        ],
    },
    // Add the IDs of extensions you want installed when the container is created.
    // Note that some extensions may not work in Alpine Linux. See https://aka.ms/vscode-remote/linux.
    "extensions": [
        "redhat.vscode-yaml"
    ]
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [],
    // Use 'postCreateCommand' to run commands after the container is created.
    // "postCreateCommand": "uname -a",
    // Uncomment when using a ptrace-based debugger like C++, Go, and Rust
    // "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],
    // Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
    // "remoteUser": "vscode"
}